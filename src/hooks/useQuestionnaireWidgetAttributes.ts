import { Widget } from "scrivito";
import { QuestionnaireWidgetAttributes } from "../contexts/QuestionnaireWidgetAttributesContext";
import { BACKWARD_BUTTON_TEXT, CUSTOM_CLASS_NAMES, EXTERNAL_ID, FAILED_MESSAGE, FAILED_MESSAGE_TYPE, FAILED_MESSAGE_WIDGETS, FIXED_FORM_HEIGHT, FOOTER_BUTTONS_SIZE, FORM_HEIGHT, FORM_TYPE, FORWARD_BUTTON_TEXT, INCLUDE_EMPTY_ANSWERS, OVERSCROLL_BEHAVIOR, PREVIEW_FAILED_MESSAGE, PREVIEW_SUBBMITTED_MESSAGE, PREVIEW_SUBMITTING_MESSAGE, QUESTIONNAIRE_ID, RETRY_BUTTON_ALIGNMENT, RETRY_BUTTON_SIZE, RETRY_BUTTON_TEXT, REVIEW_BUTTON_TEXT, REVIEW_CLOSE_BUTTON_TEXT, REVIEW_HEADER_TITLE, SCROLLBAR_WIDTH, SHOW_RETRY_BUTTON, SHOW_REVIEW, SHOW_REVIEW_FOOTER, SHOW_REVIEW_HEADER, SHOW_STEPS_IN_REVIEW, SINGLE_SUBMIT_BUTTON_ALIGNMENT, STEPS, SUBMIT_BUTTON_TEXT, SUBMITTED_MESSAGE, SUBMITTED_MESSAGE_TYPE, SUBMITTED_MESSAGE_WIDGETS, SUBMITTING_MESSAGE, SUBMITTING_MESSAGE_TYPE, SUBMITTING_MESSAGE_WIDGETS } from "../constants/constants";

export const useQuestionnaireWidgetAttributes = (widget: Widget): QuestionnaireWidgetAttributes => ({
	externalId: widget.get(EXTERNAL_ID) as string || "",
	questionnaireId: widget.get(QUESTIONNAIRE_ID) as string || "",
	steps: widget.get(STEPS) as Widget[] || [],
	isCreated: !!widget.get(QUESTIONNAIRE_ID),
	formType: widget.get(FORM_TYPE) as string,
	showSubmittedPreview: widget.get(PREVIEW_SUBBMITTED_MESSAGE) as boolean || false,
	showSubmittingPreview: widget.get(PREVIEW_SUBMITTING_MESSAGE) as boolean || false,
	showFailedPreview: widget.get(PREVIEW_FAILED_MESSAGE) as boolean || false,
	submissionFailureText: widget.get(FAILED_MESSAGE) as string || "",
	showRetryButton: widget.get(SHOW_RETRY_BUTTON) as boolean || false,
	retryButtonText: widget.get(RETRY_BUTTON_TEXT) as string || "Retry",
	retryButtonAlignment: widget.get(RETRY_BUTTON_ALIGNMENT) as string || "text-center",
	fixedFormHeight: widget.get(FIXED_FORM_HEIGHT) as boolean || false,
	formHeight: widget.get(FORM_HEIGHT) as number || 35,
	submittingMessageType: widget.get(SUBMITTING_MESSAGE_TYPE) as string || "default",
	containerClassNames: widget.get(CUSTOM_CLASS_NAMES) as string || "",
	formScrollbarWidth: widget.get(SCROLLBAR_WIDTH) as string || "default",
	formOverscrollBehavior: widget.get(OVERSCROLL_BEHAVIOR) as string || "default",
	failedMessage: widget.get(FAILED_MESSAGE) as string,
	submittedMessage: widget.get(SUBMITTED_MESSAGE) as string,
	submittedMessageType: widget.get(SUBMITTED_MESSAGE_TYPE) as string || "default",
	submittingMessage: widget.get(SUBMITTING_MESSAGE) as string,
	failedMessageType: widget.get(FAILED_MESSAGE_TYPE) as string || "default",
	failedMessageWidgets: widget.get(FAILED_MESSAGE_WIDGETS) as Widget[],
	submittedMessageWidgets: widget.get(SUBMITTED_MESSAGE_WIDGETS) as Widget[],
	submittingMessageWidgets: widget.get(SUBMITTING_MESSAGE_WIDGETS) as Widget[],
	backwardButtonText: widget.get(BACKWARD_BUTTON_TEXT) as string || "Back",
	forwardButtonText: widget.get(FORWARD_BUTTON_TEXT) as string || "Forward",
	submitButtonText: widget.get(SUBMIT_BUTTON_TEXT) as string || "Submit",
	singleSubmitButtonAlignment: widget.get(SINGLE_SUBMIT_BUTTON_ALIGNMENT) as string || "text-center",
	showReview: widget.get(SHOW_REVIEW) as boolean || false,
	includeEmptyAnswers: widget.get(INCLUDE_EMPTY_ANSWERS) as boolean || false,
	showStepsInReview: widget.get(SHOW_STEPS_IN_REVIEW) as boolean || false,
	showReviewHeader: widget.get(SHOW_REVIEW_HEADER) as boolean || false,
	showReviewFooter: widget.get(SHOW_REVIEW_FOOTER) as boolean || false,
	reviewButtonText: widget.get(REVIEW_BUTTON_TEXT) as string || "Review",
	reviewHeaderTitle: widget.get(REVIEW_HEADER_TITLE) as string || "Review",
	reviewCloseButtonText: widget.get(REVIEW_CLOSE_BUTTON_TEXT) as string || "Close",
	footerButtonsSize: widget.get(FOOTER_BUTTONS_SIZE) as string || "btn-md",
	retryButtonSize: widget.get(RETRY_BUTTON_SIZE) as string || "btn-md",
});